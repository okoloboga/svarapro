# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name svarapro.com;
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name svarapro.com;
    
    # Логирование - только ошибки
    access_log /var/log/nginx/svarapro_access.log;
    error_log /var/log/nginx/svarapro_error.log warn;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/svarapro.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/svarapro.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf; # Recommended by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Recommended by Certbot

    # Root for the frontend application
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Отключаем кэширование для HTML файлов
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Отключаем кэширование для JS и CSS файлов
    location ~* \.(js|css)$ {
        root /usr/share/nginx/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        expires -1;
        
        # Отключаем логи для статики
        access_log off;
    }
    
    # Отключаем логи для изображений и других статических файлов
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Отключаем логи для статики
        access_log off;
    }

    # API proxy with CORS
    location /api/ {
        proxy_pass http://app:3000/api/;

        # This handles pre-flight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://svarapro.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Add CORS headers to actual requests
        add_header 'Access-Control-Allow-Origin' 'https://svarapro.com' always;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket proxy
    location /socket.io/ {
        proxy_pass http://app:3000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}
